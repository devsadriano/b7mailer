Configurando um Servidor de Emails (SMTP)

o laravel n é um servidor smtp entao agente n envia email diretamente pelo laravel ele so ocntroal o fluxo de envios conectando a um servidor smtp e instruindo esse servidor pra fazer envio email

MAIL_HOST=mailhog é um servidor de smtp q vai instalar na minha maquina so q ele so funciona local ele n faz o envio ele cria um abiente simulado pra testar 
MAIL_MAILER=smtp
MAIL_HOST=mailhog
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS=null
MAIL_FROM_NAME="${APP_NAME}"

n vamos usar nesse exemplo o MAIL_HOST=mailhog vamos usar o mailtrap.io pq é mais facil
link https://mailtrap.io/inboxes
MAIL_MAILER=smtp
MAIL_HOST=sandbox.smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=ec4fb5b60c4b74
MAIL_PASSWORD=56ce6f1b371fe2
MAIL_ENCRYPTION=tls

###########################################################################################
###########################################################################################
###########################################################################################
Enviando o Primeiro Email

cirar controller 
php artisan make:controller Mails/AuthMailController
o controler n tem a funcao de criar um email pra enviar email precisamos criar uma classe especifica do laravel de email



public function build() esse metodo e responsavel por construir o noso email ele retorna uma view
public function build()
    {
        return $this->view('Mail.registerMail');
    }
precisamos passar pelo menos duas informacoes 
(de quem e esse email de qual ta enviando esse email) o laravel q define 
MAIL_FROM_ADDRESS=contato@laravelB7web.com
MAIL_FROM_NAME="${APP_NAME}"

(pra onde esta enviando esse email)
app\Http\Controllers\Mails\AuthMailController.php
public function sendRegisterMail(){
        
    }


###########################################################################################
###########################################################################################
###########################################################################################
Passando dados dinâmicos para o Email


estaos acessando a aplicacao  por uma rota e essa rota esta encaminhando agente pro controller este controller cria o email com a funcao RegisterEmail()  tem um construtor e dentro do método builder dessa mesma funcao estamos retornando um view com o registerMail já q é uma view vamos passar os dados pra ela a partit do nosso controller, vamos criar dado fake  $nome = 'Alessandro K.' 


    public function build()
    {
        $nome = 'Alessandro K.';
        return $this->view('Mail.registerMail', [
            'nome' => $nome,
        ]);
    }

agora dentro da view resources\views\Mail\registerMail.blade.php
<h1>Graças a Deus Funcionou, {{ $nome }} </h1>
aqui imprimios nome 
passamos dados do app\Mail\RegisterEmail.php para nossa view resources\views\Mail\registerMail.blade.php


tbm podemos instanciar model
    public function build()
    {
        //tbm posso instanciar model
         $user = new User();
         $user->name = 'Alessandro K2.';
         return $this->view('Mail.registerMail', [
            'nome' => $user->name,
        ]);
porem esse dado  $user = new User();
                 $user->name = 'Alessandro K2.';
ja tem no nosso controller 

public function sendRegisterMail(){
        $registerEmail = new RegisterEmail();
        return $registerEmail;
    }
entao n faz sentido estar buscando ele novamente faz mais sentido eu passar pro meu controller adiante
e vamos passar pra nossa funcao $registerEmail atraves do construtor
        $registerEmail = new RegisterEmail($user->name);
ja passmos o nome pro construtor da minha funcao RegisterEmail()
agora vou receber nome no construtor __construct()
    public function __construct($name)
    {
        // se ele chega no nosso contrutor ele ta dentro da nossa classe e se ta dentro da classe eu posso utilizalo como uma propriedade
        dd($name);
    }

entao
    private $name;
    public function __construct($name)
    {
        $this->name = $name;
    }
agora passei pra minha classe entao eu posso utilizar ele no build
    public function build()
    {
        return $this->view('Mail.registerMail', [
            'nome' => $this->name,
        ]);
    }
assim aprendemos a passar dados do meu controler p a view de email


###########################################################################################
###########################################################################################
###########################################################################################
Passando dados dinamicos - Injeção de Dependencia

O q é Injeção de Dependencia é uma classe depender da outra classe ser passada por parametro
ao inves de passar so o name     $user->name = 'Alessandro K2.';
eu passaria a classe             $user = new User();
e o registerEmail() iria tratar essa classe
entoa dentro do app\Mail\RegisterEmail.php
eu preciso preparar meu __construct() pre receber uma classe do tipo User
pra isso tenho q incluir no namespace use App\Model\User
e vou definir tipo User e $name é uma variavel pra ele
__construct(User $qualquerNome)

    public function __construct(User $qualquerNome)
        {
            $this->user = $qualquerNome;
        }
o q mudo passei a informar pra ele um tipo 
e no controler ta dando erro agora por q ta passandor uma string e n é isso q tem q passar é dado do tipo usuario
        $registerEmail = new RegisterEmail($user);



###########################################################################################
###########################################################################################
###########################################################################################
Estilização do Email e Compatibilidade

nao colocamos arquivos esternos com css pq n e bem visto por leitores de email, entao para estilizar utilizamos style, n podemos utilizar scripts javascript tbm
resources\views\Mail\registerMail.blade.php
<h1>Graças a Deus Funcionou, {{ $nome }} </h1>
<style>
    h1{
        color: red
    }
</style>
e tbm n é recomendade usar sytle somente em linha
<h1 style="color: red">Graças a Deus Funcionou, {{ $nome }} </h1>





